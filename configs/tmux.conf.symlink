# shell
#set-option -g default-shell /bin/zsh
set -g default-terminal "screen-256color"

# source-file "${HOME}/.tmuxtheme.conf"
run-shell '. ${HOME}/.config/tmux/themes/dracula.tmux'

# Set up prefix
set -g prefix C-a
unbind-key C-b
bind-key a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# Splits
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}" -p 22

set -g base-index 1 # start window numbering from 1
set -s escape-time 0 # no escape time for faster command sequences

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set-window-option -g mode-keys vi

# don't rename windows automatically
set-option -g allow-rename off

# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | grep -o '[0-9]*\.[0-9]*')"

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -g mouse-select-pane on; set -g mode-mouse on; \
  set -g mouse-resize-pane on; set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

# bind-key syntax changed in 2.4
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  "bind-key -t vi-copy v   begin-selection; \
  bind-key -t vi-copy V   select-line; \
  bind-key -t vi-copy C-v rectangle-toggle; \
  bind-key -t vi-copy y   copy-pipe 'xclip -selection clipboard -in'"

# Newer versions
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi v   send -X begin-selection; \
  bind-key -T copy-mode-vi V   send -X select-line; \
  bind-key -T copy-mode-vi C-v send -X rectangle-toggle; \
  bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'"
