" John Li's init.vim file for neovim
" Hopefully this will last me a lifetime of productivity and fun

" change mapleader from \ to space
let mapleader = "\<Space>"

"dein Scripts-----------------------------
if &compatible
  set nocompatible               " Be iMproved
endif

" Required:
set runtimepath+=~/.cache/dein/repos/github.com/Shougo/dein.vim

" Required:
if dein#load_state('~/.cache/dein')
  call dein#begin('~/.cache/dein')

  " Let dein manage dein
  " Required:
  call dein#add('~/.cache/dein/repos/github.com/Shougo/dein.vim')

  " Add or remove your plugins here like this:
  "call dein#add('Shougo/neosnippet.vim')
  "call dein#add('Shougo/neosnippet-snippets')
  call dein#add('ctrlpvim/ctrlp.vim')
  call dein#add('scrooloose/nerdtree')
  call dein#add('tomasr/molokai')
  call dein#add('tpope/vim-commentary')
  call dein#add('tpope/vim-surround')
  call dein#add('vim-airline/vim-airline')
  call dein#add('vim-airline/vim-airline-themes')
  call dein#add('christoomey/vim-tmux-navigator')
  call dein#add('nathanaelkane/vim-indent-guides')
  call dein#add('tpope/vim-fugitive')
  call dein#add('benmills/vimux')

  " Languages
  call dein#add('vim-ruby/vim-ruby')
  call dein#add('tpope/vim-rails')
  call dein#add('fatih/vim-go')
  call dein#add('pangloss/vim-javascript')
  call dein#add('mxw/vim-jsx')

  " Required:
  call dein#end()
  call dein#save_state()
endif

" Required:
filetype plugin indent on
syntax enable

" If you want to install not installed plugins on startup.
if dein#check_install()
 call dein#install()
endif

"End dein Scripts-------------------------

" PLUGIN SETTINGS
"------------------------------------------------------------------------------------
" NERDTree settings
let NERDTreeChristmasTree=0
let NERDTreeChDirMode=1
let NERDTreeMinimalUI=1 " Disable bookmarks label, and hint about '?'
nmap <silent> <leader>nf :NERDTreeFind<CR> " Display current file in the NERDTree on the left
nmap <silent> <c-n> :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" vim-jsx settings
let g:jsx_ext_required = 0 " Allow JSX in normal JS files

" Airline
let g:airline_theme='molokai'
let g:airline_section_y=''
let g:airline#extensions#whitespace#enabled = 0
" let g:airline_left_sep=''
" let g:airline_right_sep=''
" let g:airline_section_z=''
" let g:airline#extensions#tabline#enabled = 0

" Vimux keybindings
" Prompt for a command to run
 map <Leader>vp :VimuxPromptCommand<CR>

 " Run last command executed by VimuxRunCommand
 map <Leader>vl :VimuxRunLastCommand<CR>

"------------------------------------------------------------------------------------

" LOOK AND FEEL
"------------------------------------------------------------------------------------
" The all important color scheme
if &t_Co >= 256 || has("gui_running")
  syntax enable
  silent! colorscheme molokai
endif
" Allow color schemes to do bright colors without forcing bold.
if &t_Co == 8 && $TERM !~# '^linux'
  set t_Co=16
endif
"------------------------------------------------------------------------------------

" SETTINGS
"------------------------------------------------------------------------------------
set hidden " set buffers instead of asking if to save them

" spacing
set tabstop=2
set shiftwidth=2
set expandtab " replace tabs with spaces
set smarttab " use 'shiftwidth' when using tab in front of a line
set autoindent " Autoindent when starting new line, or using `o` or `O`.
set copyindent
set shiftround " Round number of spaces to indent
set cursorline " highlight line that cursor is on
" hi CursorLine ctermbg=8 "8 = dark gray"

" wrapping
set wrap
set textwidth=90
set formatoptions=qrn1

" search options
set hlsearch " highlight search
set incsearch " highlight incrementally when searching
set showmatch " show matching brackets
set ignorecase " ignore case in search
set smartcase " don't ignore case when search has capital letter

" others
set ruler " show line and column number of current cursor position
set backspace=indent,eol,start " allow backspace to remove indents, newlines, etc.
set number " show line number
set title " set window title
set visualbell
set noerrorbells
set nobackup
set noswapfile
set fileformats+=mac " Support all kind of EOLs by default.
set shortmess+=I " Don't display the intro message on starting Vim.
set number! " Turn off line numbering"
set pastetoggle=<F2> " set paste mode for dumb pasting

" Disable output, vcs, archive, rails, temp and backup files.
set wildignore+=*.o,*.out,*.obj,.git,*.rbc,*.rbo,*.class,.svn,*.gem
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz
set wildignore+=*/vendor/gems/*,*/vendor/cache/*,*/.bundle/*,*/.sass-cache/*
" set wildignore+=*.swp,*~,._*

" Get rid of automatting comment on new line
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

filetype plugin indent on " filetypes

" CtrlP faster search
if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif

" Ignore some folders and files for CtrlP indexing
let g:ctrlp_custom_ignore = {
      \ 'dir':  '\.git$\|\.yardoc\|public$|log\|tmp$',
      \ 'file': '\.so$\|\.dat$|\.DS_Store$'
      \ }

let g:ctrlp_use_caching = 0


" KEY REMAPS
"------------------------------------------------------------------------------------

" alternatives to esc
imap jk <ESC>
imap jj <ESC>

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e ~/.config/nvim/init.vim<CR>
nmap <silent> <leader>sv :so ~/.config/nvim/init.vim<CR>

nnoremap <Leader>w :w<CR>

vmap <Leader>y "+y
vmap <Leader>d "+d
nmap <Leader>p "+p
nmap <Leader>P "+P
vmap <Leader>p "+p
vmap <Leader>P "+P

"for more natural movement between lines
nnoremap j gj
nnoremap k gk

" to clear highlight press , then /
nmap <silent> <leader>/ :nohlsearch<CR>

" for easier window splitting
nnoremap <leader>s <C-w>v<C-w>l
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" for easy line juggling
nnoremap <S-Up> :m-2<CR>==
nnoremap <S-Down> :m+<CR>==
inoremap <S-Up> <Esc>:m-2<CR>==
inoremap <S-Down> <Esc>:m+<CR>==
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

" more natural split
set splitbelow
set splitright

" resize splits by sane amount
nnoremap <silent> + :exe "resize " . (winheight(0) * 3/2)<CR>
nnoremap <silent> - :exe "resize " . (winheight(0) * 2/3)<CR>

" disable shift k
map <S-k> <Nop>

" enable mouse for scrolling and window resizing
set mouse=a

" show insert mode on status line
set laststatus=2

" eliminate key lag
set timeoutlen=1000 ttimeoutlen=0
